{"uid":"d064ee7afc90d95e","name":"test_input[field_data_dict2]","fullName":"tests.test_contact_form#test_input","historyId":"63352990d647d1cd7d9f8372cec7ac18","time":{"start":1708891994900,"stop":1708891996709,"duration":1809},"status":"failed","statusMessage":"AssertionError: Error - Email missing '@'\nassert ('johndoeexample.com' is not None and None)\n +  where None = <function match at 0x000001E8835CA200>('^.+@.+\\\\..+$', 'johndoeexample.com')\n +    where <function match at 0x000001E8835CA200> = re.match","statusTrace":"field_data_dict = {'email': 'johndoeexample.com', 'message': 'Thапвпge', 'name': 'Stan', 'phone': '+35635353'}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b0d70eb1c22b04486a298fdafd3d93b4\")>\n\n    @allure.feature(\"Contact Form Tests\")\n    @pytest.mark.parametrize(\"field_data_dict\", [{\n            \"name\": \"John Doe\",\n            \"phone\": \"35353\",\n            \"email\": \"johndoe@example.com\",\n            \"message\": \"This is my message\"\n        },\n        {\n            \"name\": \"віаіа\",\n            \"phone\": \"fdgdfg\",\n            \"email\": \"johnd@oeexample.com\",\n            \"message\": \"Thапвпge\"\n            },\n    \n        {\n            \"name\": \"Stan\",\n            \"phone\": \"+35635353\",\n            \"email\": \"johndoeexample.com\",\n            \"message\": \"Thапвпge\"\n            }])\n    def test_input(field_data_dict, driver):\n        contact_page = ContactForm(driver)\n        driver.execute_script(\"window.scrollTo(0, 250);\")\n        time.sleep(1)\n        with allure.step(f\"Input name: {field_data_dict['name']}\"):\n            input_name = contact_page.input_field(\"//input[@placeholder='Your Name*']\")\n            input_name.send_keys(Keys.CONTROL + \"a\")\n            input_name.send_keys(Keys.DELETE)\n            input_name.send_keys(field_data_dict[\"name\"])\n            value_name = input_name.get_attribute(\"value\")\n    \n            # Input name field contains letters\n            allure.attach(driver.get_screenshot_as_png(), name=\"input_name_field\", attachment_type=allure.attachment_type.PNG)\n            assert value_name is not None and re.match(r'\\D+', value_name)\n        # input_name.clear()\n        with allure.step(f\"Input phone: {field_data_dict['phone']}\"):\n            # Input phone field contains digits and/or \"+\"\n            input_phone = contact_page.input_field(\"//input[@placeholder='Phone number*']\")\n            input_phone.send_keys(Keys.CONTROL + \"a\")\n            input_phone.send_keys(Keys.DELETE)\n            # input_phone.clear()\n            # WebDriverWait(driver, 3).until(lambda driver: input_phone.get_attribute(\"value\") == \"\")\n            input_phone.send_keys(field_data_dict[\"phone\"])\n            value_phone = input_phone.get_attribute(\"value\")\n            allure.attach(driver.get_screenshot_as_png(), name=\"input_phone_field\", attachment_type=allure.attachment_type.PNG)\n            assert value_phone == field_data_dict[\"phone\"]\n            # assert value_phone is not None and re.match(r'^\\+?\\d+$', value_phone) and not re.search(r'[a-zA-Z]', value_phone), \"Phone contains letter or empty\"\n        with allure.step(f\"Input email: {field_data_dict['email']}\"):\n            # Input email field contains letters and \"@\"\n            email_input = contact_page.find_element (\"//input[@placeholder='Email*']\")\n            email_input.send_keys(Keys.CONTROL + \"a\")\n            email_input.send_keys(Keys.DELETE)\n            email_input.send_keys(field_data_dict[\"email\"])\n            email_value = email_input.get_attribute(\"value\")\n            allure.attach(driver.get_screenshot_as_png(), name=\"email_input_field\", attachment_type=allure.attachment_type.PNG)\n>           assert email_value is not None and re.match(r'^.+@.+\\..+$', email_value), \"Error - Email missing '@'\"\nE           AssertionError: Error - Email missing '@'\nE           assert ('johndoeexample.com' is not None and None)\nE            +  where None = <function match at 0x000001E8835CA200>('^.+@.+\\\\..+$', 'johndoeexample.com')\nE            +    where <function match at 0x000001E8835CA200> = re.match\n\ntests\\test_contact_form.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1708891987639,"stop":1708891988894,"duration":1255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Error - Email missing '@'\nassert ('johndoeexample.com' is not None and None)\n +  where None = <function match at 0x000001E8835CA200>('^.+@.+\\\\..+$', 'johndoeexample.com')\n +    where <function match at 0x000001E8835CA200> = re.match","statusTrace":"field_data_dict = {'email': 'johndoeexample.com', 'message': 'Thапвпge', 'name': 'Stan', 'phone': '+35635353'}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b0d70eb1c22b04486a298fdafd3d93b4\")>\n\n    @allure.feature(\"Contact Form Tests\")\n    @pytest.mark.parametrize(\"field_data_dict\", [{\n            \"name\": \"John Doe\",\n            \"phone\": \"35353\",\n            \"email\": \"johndoe@example.com\",\n            \"message\": \"This is my message\"\n        },\n        {\n            \"name\": \"віаіа\",\n            \"phone\": \"fdgdfg\",\n            \"email\": \"johnd@oeexample.com\",\n            \"message\": \"Thапвпge\"\n            },\n    \n        {\n            \"name\": \"Stan\",\n            \"phone\": \"+35635353\",\n            \"email\": \"johndoeexample.com\",\n            \"message\": \"Thапвпge\"\n            }])\n    def test_input(field_data_dict, driver):\n        contact_page = ContactForm(driver)\n        driver.execute_script(\"window.scrollTo(0, 250);\")\n        time.sleep(1)\n        with allure.step(f\"Input name: {field_data_dict['name']}\"):\n            input_name = contact_page.input_field(\"//input[@placeholder='Your Name*']\")\n            input_name.send_keys(Keys.CONTROL + \"a\")\n            input_name.send_keys(Keys.DELETE)\n            input_name.send_keys(field_data_dict[\"name\"])\n            value_name = input_name.get_attribute(\"value\")\n    \n            # Input name field contains letters\n            allure.attach(driver.get_screenshot_as_png(), name=\"input_name_field\", attachment_type=allure.attachment_type.PNG)\n            assert value_name is not None and re.match(r'\\D+', value_name)\n        # input_name.clear()\n        with allure.step(f\"Input phone: {field_data_dict['phone']}\"):\n            # Input phone field contains digits and/or \"+\"\n            input_phone = contact_page.input_field(\"//input[@placeholder='Phone number*']\")\n            input_phone.send_keys(Keys.CONTROL + \"a\")\n            input_phone.send_keys(Keys.DELETE)\n            # input_phone.clear()\n            # WebDriverWait(driver, 3).until(lambda driver: input_phone.get_attribute(\"value\") == \"\")\n            input_phone.send_keys(field_data_dict[\"phone\"])\n            value_phone = input_phone.get_attribute(\"value\")\n            allure.attach(driver.get_screenshot_as_png(), name=\"input_phone_field\", attachment_type=allure.attachment_type.PNG)\n            assert value_phone == field_data_dict[\"phone\"]\n            # assert value_phone is not None and re.match(r'^\\+?\\d+$', value_phone) and not re.search(r'[a-zA-Z]', value_phone), \"Phone contains letter or empty\"\n        with allure.step(f\"Input email: {field_data_dict['email']}\"):\n            # Input email field contains letters and \"@\"\n            email_input = contact_page.find_element (\"//input[@placeholder='Email*']\")\n            email_input.send_keys(Keys.CONTROL + \"a\")\n            email_input.send_keys(Keys.DELETE)\n            email_input.send_keys(field_data_dict[\"email\"])\n            email_value = email_input.get_attribute(\"value\")\n            allure.attach(driver.get_screenshot_as_png(), name=\"email_input_field\", attachment_type=allure.attachment_type.PNG)\n>           assert email_value is not None and re.match(r'^.+@.+\\..+$', email_value), \"Error - Email missing '@'\"\nE           AssertionError: Error - Email missing '@'\nE           assert ('johndoeexample.com' is not None and None)\nE            +  where None = <function match at 0x000001E8835CA200>('^.+@.+\\\\..+$', 'johndoeexample.com')\nE            +    where <function match at 0x000001E8835CA200> = re.match\n\ntests\\test_contact_form.py:85: AssertionError","steps":[{"name":"Input name: Stan","time":{"start":1708891995904,"stop":1708891996167,"duration":263},"status":"passed","steps":[],"attachments":[{"uid":"91c8c12ab1cdbe4a","name":"input_name_field","source":"91c8c12ab1cdbe4a.png","type":"image/png","size":157896}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Input phone: +35635353","time":{"start":1708891996167,"stop":1708891996428,"duration":261},"status":"passed","steps":[],"attachments":[{"uid":"84d9b7fab21d96","name":"input_phone_field","source":"84d9b7fab21d96.png","type":"image/png","size":157255}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Input email: johndoeexample.com","time":{"start":1708891996428,"stop":1708891996709,"duration":281},"status":"failed","statusMessage":"AssertionError: Error - Email missing '@'\nassert ('johndoeexample.com' is not None and None)\n +  where None = <function match at 0x000001E8835CA200>('^.+@.+\\\\..+$', 'johndoeexample.com')\n +    where <function match at 0x000001E8835CA200> = re.match\n","statusTrace":"  File \"C:\\QA\\projects\\Charity_Sponsorship_Fund\\tests\\test_contact_form.py\", line 85, in test_input\n    assert email_value is not None and re.match(r'^.+@.+\\..+$', email_value), \"Error - Email missing '@'\"\n","steps":[],"attachments":[{"uid":"7f9f787c3966101f","name":"email_input_field","source":"7f9f787c3966101f.png","type":"image/png","size":156413}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"stepsCount":3,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708891996725,"stop":1708891998873,"duration":2148},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"Contact Form Tests"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_contact_form"},{"name":"host","value":"udav_comp"},{"name":"thread","value":"31388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_contact_form"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field_data_dict","value":"{'name': 'Stan', 'phone': '+35635353', 'email': 'johndoeexample.com', 'message': 'Thапвпge'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d064ee7afc90d95e.json","parameterValues":["{'name': 'Stan', 'phone': '+35635353', 'email': 'johndoeexample.com', 'message': 'Thапвпge'}"]}