{"name": "test_input[field_data_dict0]", "status": "failed", "statusDetails": {"message": "AssertionError: Phone contains letter or empty\nassert ('' is not None and None)\n +  where None = <function match at 0x0000022D06B0A200>('^\\\\+?\\\\d+$', '')\n +    where <function match at 0x0000022D06B0A200> = re.match", "trace": "field_data_dict = {'email': 'johndoe@example.com', 'message': 'This is my message', 'name': 'John Doe', 'phone': 'sdfsfsdf'}\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5b60065fd1f629b655a35536e3cc209\")>\n\n    @pytest.mark.parametrize(\"field_data_dict\", [{\n            \"name\": \"John Doe\",\n            \"phone\": \"sdfsfsdf\",\n            \"email\": \"johndoe@example.com\",\n            \"message\": \"This is my message\"\n        }])\n    def test_input(field_data_dict, driver):\n        contact_page = ContactForm(driver)\n        input_name = contact_page.input_field(\"//input[@placeholder='Your Name*']\")\n        input_name.send_keys(field_data_dict[\"name\"])\n        value_name = input_name.get_attribute(\"value\")\n        # Input name field contains letters\n        assert value_name is not None and re.match(r'\\D+', value_name)\n        input_phone = contact_page.input_field(\"//input[@placeholder='Phone number*']\")\n        input_phone.send_keys(field_data_dict[\"phone\"])\n        value_phone = input_phone.get_attribute(\"value\")\n        # Input phone field contains digits and/or \"+\"\n        allure.attach(driver.get_screenshot_as_png(), name=\"input_phone_field\", attachment_type=allure.attachment_type.PNG)\n>       assert value_phone is not None and re.match(r'^\\+?\\d+$', value_phone) and not re.search(r'[a-zA-Z]', value_phone), \"Phone contains letter or empty\"\nE       AssertionError: Phone contains letter or empty\nE       assert ('' is not None and None)\nE        +  where None = <function match at 0x0000022D06B0A200>('^\\\\+?\\\\d+$', '')\nE        +    where <function match at 0x0000022D06B0A200> = re.match\n\ntests\\test_contact_form.py:43: AssertionError"}, "attachments": [{"name": "input_phone_field", "source": "9659d5b6-0f44-4539-965f-45734a3e8dca-attachment.png", "type": "image/png"}], "parameters": [{"name": "field_data_dict", "value": "{'name': 'John Doe', 'phone': 'sdfsfsdf', 'email': 'johndoe@example.com', 'message': 'This is my message'}"}], "start": 1708374512963, "stop": 1708374513296, "uuid": "09176bfe-df39-4121-9867-c5a66493efdc", "historyId": "84b9e87c4ff24b637ec08725cfa094a8", "testCaseId": "938ec7942806b96867ac01ccf953ed7f", "fullName": "tests.test_contact_form#test_input", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_contact_form"}, {"name": "host", "value": "udav_comp"}, {"name": "thread", "value": "21924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_contact_form"}]}